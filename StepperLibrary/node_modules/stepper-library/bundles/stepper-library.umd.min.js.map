{"version":3,"sources":["ng://stepper-library/lib/stepset/stepset.component.ts","ng://stepper-library/lib/stepset/step/step.component.ts","ng://stepper-library/lib/stepset/stepset.module.ts"],"names":["StepsetComponent","prototype","ngOnInit","ngAfterViewInit","this","steps","active","addStep","step","totalSteps","push","jumpToStep","i","valid","stepNo","setActiveStep","nextStep","form","next","emit","setProgressbarColor","progressValue","Math","floor","rd","setStyle","circularBar","nativeElement","PI","radius","strokeDashOffset","prevStep","index","forEach","s","submit","submitEvent","Component","args","selector","template","Renderer2","ViewChild","Input","Output","btnPos","EventEmitter","StepComponent","toArray","stepset","ContentChildren","NgForm","StepsetModule","NgModule","imports","CommonModule","FormsModule","declarations","exports"],"mappings":"+XAAA,IAAAA,GA0BEA,EAAAC,UAAAC,SAAA,aAEAF,EAAAC,UAAAE,gBAAA,WACEC,KAAKC,MAAM,GAAGC,QAAS,GAGzBN,EAAAC,UAAAM,QAAA,SAAQC,GACNJ,KAAKK,WAAaL,KAAKC,MAAMK,KAAKF,IAGpCR,EAAAC,UAAAU,WAAA,SAAWC,GACLR,KAAKC,MAAU,EAAJO,EAAQA,EAAI,EAAIA,GAAGC,QAChCT,KAAKU,OAASF,EACdR,KAAKW,cAAcX,KAAKU,UAI5Bd,EAAAC,UAAAe,SAAA,WACMZ,KAAKC,MAAMD,KAAKU,QAAQG,KAAK,GAAU,QACzCb,KAAKC,MAAMD,KAAKU,QAAQD,OAAQ,EAChCT,KAAKU,OAASV,KAAKK,YAAaL,KAAKW,gBAAgBX,KAAKU,QAC1DV,KAAKc,KAAKC,KAAKf,KAAKC,MAAMD,KAAKU,QAAQD,SAK3Cb,EAAAC,UAAAmB,oBAAA,WACEhB,KAAKiB,cAAgBC,KAAKC,MAAM,KAAOnB,KAAKK,WAAa,IAAML,KAAKU,OAAS,IAC7EV,KAAKoB,GAAGC,SAASrB,KAAKsB,YAAYC,cAAe,qBAAuB,IAAMvB,KAAKiB,eAAiB,KAAQC,KAAKM,IAAM,EAAIxB,KAAKyB,SAAWzB,KAAK0B,mBAGlJ9B,EAAAC,UAAA8B,SAAA,WACgB,EAAd3B,KAAKU,QAAaV,KAAKW,gBAAgBX,KAAKU,SAG9Cd,EAAAC,UAAAc,cAAA,SAAciB,GACZ5B,KAAKgB,sBACLhB,KAAKC,MAAM4B,QAAO,SAACC,GACjBA,EAAE5B,QAAS,IAEbF,KAAKC,MAAM2B,GAAO1B,QAAS,GAG7BN,EAAAC,UAAAkC,OAAA,WACE/B,KAAKgC,YAAYjB,MAAK,wBAnEzBkB,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,UACVC,SAAA,k0IALmEC,EAAAA,kDAelEC,EAAAA,UAASJ,KAAA,CAAC,+BACVK,EAAAA,MAAKL,KAAA,CAAC,6BACNK,EAAAA,MAAKL,KAAA,CAAC,wBACNM,EAAAA,4BACAF,EAAAA,UAASJ,KAAA,CAAC,4BACVM,EAAAA,UAqDH5C,GAnDE,SAAAA,EAAoBwB,GAAApB,KAAAoB,GAAAA,EAZpBpB,KAAAC,MAAQ,GACRD,KAAAU,OAAS,EACTV,KAAAK,WAAa,EAKIL,KAAAyC,OAAkB,WACzBzC,KAAAc,KAA8B,IAAI4B,EAAAA,aAElC1C,KAAAgC,YAAqC,IAAIU,EAAAA,aACnD1C,KAAAyB,OAAiB,GAEfzB,KAAK0B,iBAA6B,EAAVR,KAAKM,GAASxB,KAAKyB,OCvB/C,IAAAkB,GAkBEA,EAAA9C,UAAAC,SAAA,aAGA6C,EAAA9C,UAAAE,gBAAA,WACEC,KAAKa,KAAOb,KAAKa,KAAK+B,UACtB5C,KAAK6C,QAAQ1C,QAAQH,2BAnBxBiC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,OACVC,SAAA,guBALOxC,oCAWN2C,EAAAA,oBACAO,EAAAA,gBAAeZ,KAAA,CAACa,EAAAA,WAanBJ,GAZE,SAAAA,EAAoBE,GAAA7C,KAAA6C,QAAAA,EAJpB7C,KAAAE,QAAkB,EAClBF,KAAAS,OAAc,ECXhB,IAAAuC,uBAOCC,EAAAA,SAAQf,KAAA,CAAC,CACNgB,QAAS,CAACC,EAAAA,aAAcC,EAAAA,aACxBC,aAAc,CAACzD,EAAkB+C,GACjCW,QAAS,CAACX,EAAc/C,OAEDoD,GAL3B,SAAAA","sourcesContent":["import { Component, OnInit, EventEmitter, Output, Input, ElementRef, Renderer2, ViewChild } from '@angular/core';\n\n\n@Component({\n  selector: 'stepset',\n  templateUrl: './stepset.component.html',\n  styleUrls: ['./stepset.component.scss']\n})\nexport class StepsetComponent implements OnInit {\n\n  steps = [];\n  stepNo = 0;\n  totalSteps = 0;\n  progressValue: number;\n  strokeDashOffset: number;\n  @ViewChild('progressbar') progressbar: ElementRef;\n  @Input('finishBtn') styles?: any;\n  @Input('btnPos') btnPos?: string = 'btn-left';\n  @Output() next: EventEmitter<boolean> = new EventEmitter();\n  @ViewChild('bar') circularBar: ElementRef;\n  @Output() submitEvent: EventEmitter<boolean> = new EventEmitter();\n  radius: number = 35;\n  constructor(private rd: Renderer2) {\n    this.strokeDashOffset = Math.PI * 2 * this.radius;\n  }\n\n  ngOnInit() {\n  }\n  ngAfterViewInit() {\n    this.steps[0].active = true;\n  }\n\n  addStep(step) {\n    this.totalSteps = this.steps.push(step);\n  }\n\n  jumpToStep(i) {\n    if (this.steps[i > 0 ? i - 1 : i].valid) {\n      this.stepNo = i;\n      this.setActiveStep(this.stepNo);\n    }\n  }\n\n  nextStep() {\n    if (this.steps[this.stepNo].form[0]['valid']) {\n      this.steps[this.stepNo].valid = true;\n      this.stepNo < this.totalSteps ? this.setActiveStep(++this.stepNo) : null;\n      this.next.emit(this.steps[this.stepNo].valid);\n    }\n\n  }\n\n  setProgressbarColor() {\n    this.progressValue = Math.floor(100 / (this.totalSteps - 1)) * this.stepNo - 100;\n    this.rd.setStyle(this.circularBar.nativeElement, 'stroke-dashoffset', ((100 - this.progressValue) / 100) * (Math.PI * (2 * this.radius)) - this.strokeDashOffset)\n  }\n\n  prevStep() {\n    this.stepNo > 0 ? this.setActiveStep(--this.stepNo) : null;\n  }\n\n  setActiveStep(index) {\n    this.setProgressbarColor();\n    this.steps.forEach(s => {\n      s.active = false;\n    });\n    this.steps[index].active = true;\n  }\n\n  submit() {\n    this.submitEvent.emit(true);\n  }\n\n}\n","import { Component, OnInit, Input, ViewChild, ContentChildren } from '@angular/core';\nimport { StepsetComponent } from '../stepset.component';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'step',\n  templateUrl: './step.component.html',\n  styleUrls: ['./step.component.scss']\n})\nexport class StepComponent implements OnInit {\n  active: boolean = false;\n  valid:boolean=false;\n  @Input() title: string;\n  @ContentChildren(NgForm) form;\n  constructor(private stepset: StepsetComponent) {\n\n  }\n\n  ngOnInit() {\n  }\n\n  ngAfterViewInit() {\n    this.form = this.form.toArray();\n    this.stepset.addStep(this);\n  }\n\n}\n","import { NgModule } from \"@angular/core\";\r\nimport { StepsetComponent } from \"./stepset.component\";\r\nimport { StepComponent } from \"./step/step.component\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule } from \"@angular/forms\";\r\n\r\n\r\n@NgModule({\r\n    imports: [CommonModule, FormsModule],\r\n    declarations: [StepsetComponent, StepComponent],\r\n    exports: [StepComponent,StepsetComponent]\r\n})\r\nexport class StepsetModule{}"]}